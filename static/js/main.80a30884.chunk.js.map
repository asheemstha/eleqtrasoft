{"version":3,"sources":["Components/Header/Header.jsx","Components/Sidebar/Sidebar.jsx","Pages/Courses/Courses.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","$","window","on","scrollTop","addClass","removeClass","className","to","type","placeholder","Sidebar","CoursesPage","App","basename","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80a30884.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nimport { FiSearch } from \"react-icons/fi\";\nconst Header = () => {\n  $(window).on(\"scroll\", () => {\n    if ($(window).scrollTop() > 10) {\n      $(\"header.mainHeader\").addClass(\"scrolledHeader\");\n    } else {\n      $(\"header.mainHeader\").removeClass(\"scrolledHeader\");\n    }\n  });\n  return (\n    <header className=\"mainHeader\">\n      <div className=\"headerContent - flex f-ai-c f-jc-sb\">\n        <div className=\"headerContent__left - flex f-ai-bl\">\n          <div className=\"hcl__brandPageIndicator - flex f-ai-bl\">\n            <Link to=\"/\" className=\"brandLink\">\n              <p className=\"brandName\">Eleqtrasoft</p>\n            </Link>\n            <div className=\"pageIndicator\">\n              <p className=\"pageName\">Courses</p>\n            </div>\n          </div>\n          <nav className=\"hcl__nav\">\n            <Link to=\"/\" className=\"hcl__nav__navLinks active\">\n              Courses\n            </Link>\n            <Link to=\"/\" className=\"hcl__nav__navLinks\">\n              Library\n            </Link>\n            <Link to=\"/\" className=\"hcl__nav__navLinks\">\n              Pricing\n            </Link>\n            <Link to=\"/\" className=\"hcl__nav__navLinks\">\n              Services\n            </Link>\n          </nav>\n        </div>\n        <div className=\"headerContent__right - flex f-ai-c\">\n          <div className=\"hcr__searchBar - flex f-pc\">\n            <input\n              type=\"text\"\n              className=\"hcr__searchInput\"\n              placeholder=\"Search courses, resources, etc.\"\n            />\n            <div className=\"searchIconCont - flex f-pc\">\n              <FiSearch className=\"searchIcon\" />\n            </div>\n          </div>\n          <div className=\"hcr__accountSession\">\n            <Link to=\"/\" className=\"loginLink\">\n              Login\n            </Link>\n            <Link to=\"/\" className=\"signupLink\">\n              SignUp\n            </Link>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nconst Sidebar = () => {\n    $(window).on(\"scroll\", () => {\n        if ($(window).scrollTop() > 10) {\n          $(\".sidebar\").addClass(\"scrolledSidebar\");\n        } else {\n          $(\".sidebar\").removeClass(\"scrolledSidebar\");\n        }\n      });\n    return (\n        <div className=\"sidebar - flex\">\n            <nav className=\"sideNav\">\n                <div className=\"sideNav__section\">\n                    <div className=\"sideNav__section__title\">\n                        Category\n                    </div>\n                    <div className=\"sideNavLinks - flex column \">\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Robotics & Automation</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Web Development</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">App Development</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Film & Animation</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Graphics Designing</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Programming Language</Link>\n                    </div>\n                </div>\n                <div className=\"sideNav__section\">\n                    <div className=\"sideNav__section__title\">\n                        Price\n                    </div>\n                    <div className=\"sideNavLinks - flex f-ai-c\">\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">All</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Free</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Paid</Link>\n                    </div>\n                </div>\n                <div className=\"sideNav__section\">\n                    <div className=\"sideNav__section__title\">\n                        Year\n                    </div>\n                    <div className=\"sideNavLinks - flex column \">\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2020</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2019</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2018</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2017</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2016</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">2015</Link>\n                        <Link to=\"/\" className=\"sideNavLink - flex f-ai-c\">Older</Link>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"separator\"></div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport Header from '../../Components/Header/Header'\nimport Sidebar from '../../Components/Sidebar/Sidebar'\n\nconst CoursesPage = () => {\n    return (\n        <div className=\"coursesPage\">\n           <Header/>\n           <Sidebar/>\n        </div>\n    )\n}\n\nexport default CoursesPage;\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.scss';\nimport CoursesPage from './Pages/Courses/Courses';\nconst App = () => {\n    return (\n        <Router basename=\"/eleqtrasoft\">\n            <div className=\"app\">\n               <Switch>\n                   <Route path=\"/\" exact component={CoursesPage}/>\n               </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}